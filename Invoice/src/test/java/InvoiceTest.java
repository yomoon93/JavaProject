import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;
// DO NOT EDIT THIS FILE
public class InvoiceTest {
    @Test
    void checkSequentialIDs() {
        Invoice inv1 = new Invoice();
        Invoice inv2 = new Invoice();
        assertEquals(inv1.getId()+1,inv2.getId());
    }

    @Test
    void priceOfEmptyInvoice() {
        Invoice inv = new Invoice();
        assertEquals(0, inv.totalPrice(), 0.01);
    }

    @Test
    void checkItemAddedInvItem() {
        Invoice inv = new Invoice();
        inv.addItem(new InventoryItem("Banana", 10), 3);
        assertEquals(1, inv.getItems().size());
    }

    @Test
    void checkItemAddedInvItemWithDiscount() {
        Invoice inv = new Invoice();
        inv.addItem(new InventoryItem("Banana", 10), 3, 0.2);
        assertEquals(1, inv.getItems().size());
    }

    @Test
    void checkItemAddedFromLineItem() {
        Invoice inv = new Invoice();
        inv.addItem(new LineItem(new InventoryItem("Banana", 10), 3));
        assertEquals(1, inv.getItems().size());
    }

    @Test
    void checkPriceOneItem() {
        Invoice inv = new Invoice();
        inv.addItem(new LineItem(new InventoryItem("Banana", 10), 3));
        assertEquals(30, inv.totalPrice(), 0.01);
    }

    @Test
    void checkPriceOneItemDiscount() {
        Invoice inv = new Invoice();
        inv.addItem(new InventoryItem("Banana", 10), 3, 0.2);
        assertEquals(24, inv.totalPrice(), 0.01);
    }

    @Test
    void checkPriceMultipleItems() {
        Invoice inv = new Invoice();
        inv.addItem(new InventoryItem("Banana",10), 3, 0.3);
        inv.addItem(new InventoryItem("Apple", 0.3), 12);
        assertEquals(24.6, inv.totalPrice(), 0.01);
    }


}
